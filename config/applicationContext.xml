<?xml version="1.0" encoding="UTF-8"?>		    
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-2.5.xsd			
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
					    	
			
	<!-- 属性文件加载器 -->
	<!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->
				
	<bean id="baseDao" class="com.basic.base.BaseDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean> 
		
	<!-- Student -->
	<bean id="studentAction" class="com.basic.action.StudentAction" scope="prototype">
		<property name="studentService" ref="studentService"/>
	</bean>
	<bean id="studentService" class="com.basic.service.impl.StudentService">
		<property name="studentDao" ref="studentDao"/>
	</bean>
	<bean id="studentDao" class="com.basic.dao.impl.StudentDao" parent="baseDao"></bean>
	<!--  -->
		
	<!-- User -->
	<bean id="userAction" class="com.basic.action.UserAction" scope="prototype">
		<property name="userService" ref="userService"/>
	</bean>
	<bean id="userService" class="com.basic.service.impl.UserService">
		<property name="userDao" ref="userDao"/>
	</bean>
	<bean id="userDao" class="com.basic.dao.impl.UserDao" parent="baseDao"></bean>
		
	<bean id="ccAction" class="com.basic.action.CheckCodeAction" scope="prototype">
		<property name="checkCodeService" ref="checkCodeService"/>
	</bean>
	<bean id="checkCodeService" class="com.basic.service.impl.CheckCodeService">
	</bean>
	<!--  -->
	
	<!-- Document -->
	<bean id="documentAction" class="com.basic.action.DocumentAction" scope="prototype">
		<property name="documentService" ref="documentService"/>
	</bean>
	<bean id="documentService" class="com.basic.service.impl.DocumentService">
		<property name="documentDao" ref="documentDao"/>
	</bean>
	<bean id="documentDao" class="com.basic.dao.impl.DocumentDao" parent="baseDao"></bean>
	<!--  -->
	
	<!--  -->
	<bean id="uploadAction" class="com.basic.action.UploadAction" scope="prototype">
	</bean>
	<bean id="downloadAction" class="com.basic.action.DownloadAction" scope="prototype">
	</bean>
	<!--  -->
	
	<!-- Email -->
	<bean id="mailAction" class="com.basic.action.MailAction" scope="prototype">
		<property name="mailSenderService" ref="mailSenderService"/>
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:mail.properties</value>
			</list>
		</property>
	</bean>
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
		<property name="host" value="${mail.host}"/>  
		<property name="username" value="${mail.username}"/>  
		<property name="password" value="${mail.password}"/>  
		<property name="defaultEncoding" value="UTF-8"></property>  
		<property name="javaMailProperties">  
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>  
				<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>  
				<!--  
				<prop key="mail.smtp.starttls.enable">true</prop>  
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>  
				<prop key="mail.smtp.socketFactory.fallback">false</prop>  
				-->  
			</props>  
		</property>  
	</bean>	
	<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">  
		<property name="from">  
			<value>${mail.default.from}</value>  
		</property>  
	</bean>  
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="resourceLoaderPath" value="classpath:velocity" />
	</bean>  
	<bean id="mailSenderService" class="com.basic.service.impl.MailSenderService">    
		<property name="mailSender" ref="mailSender" />  
		<property name="simpleMailMessage" ref="simpleMailMessage" />  
		<property name="velocityEngine" ref="velocityEngine" />  
	</bean> 
	<!--  -->
		
		
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>          
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/basic/pojo/Student.hbm.xml</value>
				<value>com/basic/pojo/User.hbm.xml</value>
				<value>com/basic/pojo/Document.hbm.xml</value>
			</list>
		</property>
	</bean>
		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		 
		<property name="url" value="jdbc:mysql://localhost:3306/basic?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>
		
		<!-- 
		<property name="url" value="jdbc:mysql://hdm174585450.my3w.com:3306/hdm174585450_db?useUnicode=true&amp;characterEncoding=UTF-8"/>
		<property name="username" value="hdm174585450"/>
		<property name="password" value="verygood88"/>
		-->
		
		<!--maxActive: 最大连接数量-->    
        <property name="maxActive" value="150"/>  
        <!--minIdle: 最小空闲连接-->    
        <property name="minIdle" value="5"/>  
        <!--maxIdle: 最大空闲连接-->    
        <property name="maxIdle" value="20"/>  
        <!--initialSize: 初始化连接-->    
        <property name="initialSize" value="30"/>  
        <!-- 连接被泄露时是否打印 -->  
        <property name="logAbandoned" value="true"/>  
        <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/>  
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/>  
        <!--maxWait: 超时等待时间以毫秒为单位 1000等于60秒-->  
        <property name="maxWait" value="1000"/>  
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="10000"/>  
		<property name="validationQuery" value="SELECT NOW() FROM DUAL"/> 
		
		<!--
		<property name="initialSize" value="30"/>
		<property name="maxActive" value="100"/>
		<property name="maxIdle" value="100"/>
		<property name="maxWait" value="1000"/>
		-->
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager" />
	<tx:advice id="basicAdvice" transaction-manager="transactionManager">  
		<tx:attributes>
			<tx:method name="load*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="allBasicServiceMethod" expression="(execution(* com.basic.service.*.*(..))) or (execution(* com.basic.base.IBaseService.*(..)))"/>
		<!--<aop:pointcut id="allBasicServiceMethod" expression="execution(* service.*.*(..))"/>-->
		<aop:advisor pointcut-ref="allBasicServiceMethod" advice-ref="basicAdvice" />
	</aop:config>
	
</beans>
